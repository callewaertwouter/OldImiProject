@using Imi.Project.Blazor.Models;
@using Imi.Project.Blazor.Models.Mocking;
@using Imi.Project.Api.Core.Entities;

<EditForm Model="@Recipe" OnValidSubmit="@(e => OnSave.InvokeAsync(Recipe))">  @*@MockRecipe won't work because in @code the entity is defined as Recipe! *@
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label for="title">Title: </label>
		<InputText id="title" class="form-control" @bind-Value="Recipe.Title" />
		<ValidationMessage For="@(() => Recipe.Title)" />
	</div>
	<div class="form-group">
		<label for="description">Description: </label>
		<InputTextArea id="description" class="form-control" @bind-Value="Recipe.Description" />
	</div>

	<button type="submit" class="btn btn-primary">Save</button>
	<button type="button" class="btn btn-warning" @onclick="OnCancel">Cancel</button>
</EditForm>

@code {
	[Parameter]
	public Recipe Recipe { get; set; }  /*REMEMBER: This is the model being used in EditForm! Equal to using @model in views!*/

	[Parameter]
	public EventCallback<Recipe> OnSave { get; set; }

	[Parameter]
	public EventCallback OnCancel { get; set; }
}