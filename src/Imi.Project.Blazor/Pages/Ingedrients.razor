@page "/ingedrients"
@using Imi.Project.Api.Core.Entities
@using Imi.Project.Blazor.Services.Crud
@using Imi.Project.Blazor.Components.Ingedrient
@inject ICRUDService<MockIngedrient> service;

<h3>Ingedrients</h3>

<div class="mt-3">
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger">
            @error
        </div>
    }

    @if (currentIngedrient == null)
    {
        <IngedrientList Ingedrients="ingedrients"
                    OnAdd="AddIngedrient"
                    OnEdit="EditIngedrient"
                    OnDelete="DeleteIngedrient">
        </IngedrientList>
    }
    else
    {
        <IngedrientForm Ingedrient="currentIngedrient"
                    OnSave="SaveIngedrient"
                    OnCancel="RefreshIngedrients">
        </IngedrientForm>
    }
</div>

@code {
    private MockIngedrient[]? ingedrients;
    private MockIngedrient? currentIngedrient;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        await RefreshIngedrients();
    }

    public async Task RefreshIngedrients()
    {
        ingedrients = (await service.GetAll()).ToArray();
        this.currentIngedrient = null;
    }

    public void AddIngedrient()
    {
        this.currentIngedrient = new MockIngedrient();
    }

    public async Task EditIngedrient(MockIngedrient item)
    {
        this.currentIngedrient = await service.Get(item.Id);
    }

    public async Task SaveIngedrient(MockIngedrient item)
    {
        try
        {
            if (currentIngedrient.Id.Equals(Guid.Empty))
            {
                await service.Create(currentIngedrient);
            }
            else
            {
                await service.Update(currentIngedrient);
            }

            await RefreshIngedrients();
        }
        catch (Exception ex)
        {
            this.error = ex.Message;
        }
    }


    public async Task DeleteIngedrient(MockIngedrient item)
    {
        try
        {
            await service.Delete(item.Id);
            await this.RefreshIngedrients();
        }
        catch (Exception ex)
        {
            this.error = ex.Message;
        }
    }
}