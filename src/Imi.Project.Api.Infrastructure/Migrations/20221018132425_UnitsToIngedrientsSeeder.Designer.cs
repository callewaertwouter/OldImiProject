// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221018132425_UnitsToIngedrientsSeeder")]
    partial class UnitsToIngedrientsSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("Ingedrients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7653),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7656),
                            Name = "Melk",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7659),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7659),
                            Name = "Laurier",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7661),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7661),
                            Name = "Gehakt",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7663),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7663),
                            Name = "Tomatenpuree",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7665),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7665),
                            Name = "Boter",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7667),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7668),
                            Name = "Paprika",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7669),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7670),
                            Name = "Wortel",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7672),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7672),
                            Name = "Ajuin",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7674),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7674),
                            Name = "Kippenbouillon",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7676),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7676),
                            Name = "Olijfolie",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7678),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7678),
                            Name = "Champignons",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7681),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7682),
                            Name = "Gemalen kaas",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7684),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7685),
                            Name = "Spaghetti",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            CreatedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7687),
                            LastEditedOn = new DateTime(2022, 10, 18, 13, 24, 25, 324, DateTimeKind.Utc).AddTicks(7687),
                            Name = "Courgette",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7718),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7765),
                            Title = "Testrecept"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7768),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7770),
                            Title = "Witte saus"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7773),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7774),
                            Title = "Gemarineerde brochetten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7777),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7779),
                            Title = "Champignonsoep"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7782),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7783),
                            Title = "Gehaktbrood met bonen en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7786),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7788),
                            Title = "Hamburger met wortel en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7791),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7792),
                            Title = "Viskroketjes met gebakken aardappelen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7795),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7797),
                            Title = "Grillworst met puree"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7800),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7801),
                            Title = "Spaghetti bolognaise"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7804),
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7806),
                            Title = "Ongelooflijk goed gerecht"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.UnitOfMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MeasureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasure");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            MeasureUnit = "gram"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            MeasureUnit = "liter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            MeasureUnit = "blik(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            MeasureUnit = "tak(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            MeasureUnit = "blaadje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            MeasureUnit = "deciliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            MeasureUnit = "centiliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            MeasureUnit = "bakje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            MeasureUnit = "vrij naar keuze"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            MeasureUnit = "geen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            MeasureUnit = " "
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7830),
                            Email = "admin@admin.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7833)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7835),
                            Email = "woutercallewaert@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7837)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7840),
                            Email = "jjameson@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7842)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7844),
                            Email = "tigbiddies@xxx.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7846)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7849),
                            Email = "allthebutz@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7851)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7856),
                            Email = "ikloopindiestrond@gagmaker.net",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7858)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7860),
                            Email = "olklo@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7862)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7865),
                            Email = "wsmets1991@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7867)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7870),
                            Email = "maarten.raviola@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7871)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7874),
                            Email = "toiletbril@lolbroek.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 15, 24, 25, 324, DateTimeKind.Local).AddTicks(7876)
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitOfMeasure");
                });
#pragma warning restore 612, 618
        }
    }
}
