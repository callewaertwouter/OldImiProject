// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221019101140_IngedrientsToRecipesJoinTable")]
    partial class IngedrientsToRecipesJoinTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UnitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("Ingedrients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5796),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5797),
                            Name = "Melk",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5799),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5799),
                            Name = "Laurier",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5801),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5801),
                            Name = "Gehakt",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5803),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5803),
                            Name = "Tomatenpuree",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5805),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5805),
                            Name = "Boter",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5807),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5807),
                            Name = "Paprika",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5809),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5809),
                            Name = "Wortel",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5811),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5811),
                            Name = "Ajuin",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5813),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5813),
                            Name = "Kippenbouillon",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5815),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5815),
                            Name = "Olijfolie",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5818),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5818),
                            Name = "Champignons",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5820),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5820),
                            Name = "Gemalen kaas",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5822),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5822),
                            Name = "Spaghetti",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            CreatedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5824),
                            LastEditedOn = new DateTime(2022, 10, 19, 10, 11, 40, 237, DateTimeKind.Utc).AddTicks(5824),
                            Name = "Courgette",
                            UnitOfMeasureId = new Guid("00000000-0000-0000-0000-000000000011")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5844),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5893),
                            Title = "Testrecept"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5896),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5897),
                            Title = "Witte saus"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5900),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5902),
                            Title = "Gemarineerde brochetten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5904),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5906),
                            Title = "Champignonsoep"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5909),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5910),
                            Title = "Gehaktbrood met bonen en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5913),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5915),
                            Title = "Hamburger met wortel en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5917),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5919),
                            Title = "Viskroketjes met gebakken aardappelen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5922),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5923),
                            Title = "Grillworst met puree"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5926),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5928),
                            Title = "Spaghetti bolognaise"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5930),
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5932),
                            Title = "Ongelooflijk goed gerecht"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngedrient", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngedrientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecipeId", "IngedrientId");

                    b.HasIndex("IngedrientId");

                    b.ToTable("RecipeIngedrients");

                    b.HasData(
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000001"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000002"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000002"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000003"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000003"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000003"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000003"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000004"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000004"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000005"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000005"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000005"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000006"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000006"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000007"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000008"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000008"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000008"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000014")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000012")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000009"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000013")
                        },
                        new
                        {
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000010"),
                            IngedrientId = new Guid("00000000-0000-0000-0000-000000000001")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.UnitOfMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MeasureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasure");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            MeasureUnit = "gram"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            MeasureUnit = "liter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            MeasureUnit = "blik(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            MeasureUnit = "tak(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            MeasureUnit = "blaadje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            MeasureUnit = "deciliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            MeasureUnit = "centiliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            MeasureUnit = "bakje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            MeasureUnit = "vrij naar keuze"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            MeasureUnit = "geen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            MeasureUnit = " "
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5990),
                            Email = "admin@admin.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5992)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5996),
                            Email = "woutercallewaert@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(5998)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6000),
                            Email = "jjameson@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6002)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6005),
                            Email = "tigbiddies@xxx.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6006)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6009),
                            Email = "allthebutz@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6011)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6013),
                            Email = "ikloopindiestrond@gagmaker.net",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6015)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6018),
                            Email = "olklo@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6019)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6022),
                            Email = "wsmets1991@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6024)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6026),
                            Email = "maarten.raviola@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6028)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6031),
                            Email = "toiletbril@lolbroek.com",
                            LastEditedOn = new DateTime(2022, 10, 19, 12, 11, 40, 237, DateTimeKind.Local).AddTicks(6033)
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngedrient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Ingedrient", "Ingedrient")
                        .WithMany("UsedInRecipes")
                        .HasForeignKey("IngedrientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("ListOfIngedrients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingedrient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.Navigation("UsedInRecipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Navigation("ListOfIngedrients");
                });
#pragma warning restore 612, 618
        }
    }
}
