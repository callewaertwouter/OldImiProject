// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingedrient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingedrients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7537),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7540),
                            Name = "Melk"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7541),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7542),
                            Name = "Laurier"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7543),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7543),
                            Name = "Gehakt"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7545),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7545),
                            Name = "Tomatenpuree"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7546),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7547),
                            Name = "Boter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7548),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7548),
                            Name = "Paprika"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7550),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7550),
                            Name = "Wortel"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7551),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7552),
                            Name = "Ajuin"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7553),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7553),
                            Name = "Kippenbouillon"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7554),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7555),
                            Name = "Olijfolie"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7557),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7557),
                            Name = "Champignons"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7561),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7562),
                            Name = "Gemalen kaas"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7563),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7563),
                            Name = "Spaghetti"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            CreatedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7564),
                            LastEditedOn = new DateTime(2022, 10, 18, 9, 48, 55, 465, DateTimeKind.Utc).AddTicks(7565),
                            Name = "Courgette"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7588),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7630),
                            Title = "Testrecept"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7633),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7635),
                            Title = "Witte saus"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7638),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7640),
                            Title = "Gemarineerde brochetten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7642),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7644),
                            Title = "Champignonsoep"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7647),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7649),
                            Title = "Gehaktbrood met bonen en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7652),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7653),
                            Title = "Hamburger met wortel en patatten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7656),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7658),
                            Title = "Viskroketjes met gebakken aardappelen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7661),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7662),
                            Title = "Grillworst met puree"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7665),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7667),
                            Title = "Spaghetti bolognaise"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7670),
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7672),
                            Title = "Ongelooflijk goed gerecht"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.UnitOfMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MeasureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasure");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            MeasureUnit = "gram"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            MeasureUnit = "liter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            MeasureUnit = "blik(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            MeasureUnit = "tak(ken)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            MeasureUnit = "blaadje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            MeasureUnit = "deciliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            MeasureUnit = "centiliter"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            MeasureUnit = "bakje(s)"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            MeasureUnit = "vrij naar keuze"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            MeasureUnit = "geen"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7697),
                            Email = "admin@admin.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7699)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7702),
                            Email = "woutercallewaert@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7703)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7706),
                            Email = "jjameson@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7708)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7711),
                            Email = "tigbiddies@xxx.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7713)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7715),
                            Email = "allthebutz@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7717)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7720),
                            Email = "ikloopindiestrond@gagmaker.net",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7722)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7725),
                            Email = "olklo@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7727)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7730),
                            Email = "wsmets1991@hotmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7732)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7734),
                            Email = "maarten.raviola@gmail.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7736)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7739),
                            Email = "toiletbril@lolbroek.com",
                            LastEditedOn = new DateTime(2022, 10, 18, 11, 48, 55, 465, DateTimeKind.Local).AddTicks(7741)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
